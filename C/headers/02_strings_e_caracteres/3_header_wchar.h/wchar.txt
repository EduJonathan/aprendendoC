Explicando o wchar_t em C:
O tipo wchar_t em C √© utilizado para representar **caracteres largos**, permitindo 
armazenar e manipular **caracteres Unicode** e outros conjuntos de caracteres multibyte 
que n√£o podem ser representados com o tipo char.

Introdu√ß√£o:
O tipo char em C √© normalmente usado para armazenar caracteres de 1 byte, o que o limita 
a representar apenas 256 caracteres diferentes, dependendo da codifica√ß√£o (geralmente ASCII). 
No entanto, quando precisamos trabalhar com idiomas ou sistemas que exigem uma gama maior de
caracteres, como chin√™s, √°rabe, russo ou emojis, precisamos de um tipo que possa armazenar 
mais informa√ß√µes.

----------------------------------------------------
O que √© wchar_t?
- wchar_t: √© um tipo de dado especial em C, utilizado para armazenar caracteres largos, 
ou seja, caracteres de m√∫ltiplos bytes.

- O tamanho de wchar_t pode variar dependendo do compilador e da plataforma, mas normalmente 
√© de **2 ou 4 bytes**.

- Em sistemas com codifica√ß√£o Unicode, o tipo wchar_t pode armazenar caracteres de qualquer 
conjunto Unicode, como UTF-16 ou UTF-32.
----------------------------------------------------

Por que usar wchar_t:
O uso de wchar_t √© vantajoso quando trabalhamos com texto multilingue ou quando a 
aplica√ß√£o precisa de suporte a conjuntos de caracteres que n√£o s√£o represent√°veis com o 
tipo char. Por exemplo, em uma aplica√ß√£o que manipula texto em chin√™s ou japon√™s, √© 
necess√°rio usar wchar_t para representar caracteres que exigem mais de um byte.

----------------------------------------------------

Como utilizar na linguagem C:
Os include <wchar.h> e <wctype.h>, n√£o se diferencia muito dos includes <string.h> e <ctype.h>, 
praticamente as mesmas fun√ß√µes com mesmos prop√≥sitos(strlen, strcpy, wcslen, wcscpy),
com a √∫nica diferen√ßa que o tratamento √© para padr√µes de caracteres mais elevados.

A <wctype.h> oferece fun√ß√µes para lidar com caracteres largos de maneira semelhante √†s 
fun√ß√µes de <ctype.h>, mas com suporte para o tipo wchar_t.

E a <wchar.h> fornece fun√ß√µes para manipula√ß√£o de strings largas (usando wchar_t) de 
maneira semelhante ao que voc√™ faria com strings padr√£o (do tipo char*), mas com o tipo de 
dados wchar_t.
----------------------------------------------------

Significado do s√≠mbolos Unicode: 
Sim, o Unicode cont√©m uma vasta gama de s√≠mbolos e caracteres para representar diferentes
tipos de caracteres, incluindo caracteres largos (ou wide characters). Esses caracteres s√£o
especialmente importantes em contextos onde precisamos representar conjuntos de caracteres 
multibyte, como os usados em v√°rias l√≠nguas e s√≠mbolos gr√°ficos.

Exemplos:
\u0041: A (letra A mai√∫scula)
\u003F: ? (ponto de interroga√ß√£o)
\u20AC: ‚Ç¨ (s√≠mbolo do euro)

Emojis

\u1F600: üòÄ (carinha sorrindo)
\u1F609: üòâ (carinha piscando)
\u2764:  ‚ù§Ô∏è (cora√ß√£o)
